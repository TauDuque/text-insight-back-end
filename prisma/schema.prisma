generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  name      String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  api_keys  api_keys[]
  documents Document[]

  @@map("users")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Document {
  id                  String         @id @default(uuid())
  job_id              String?        @unique
  originalName        String         @map("original_name")
  filename            String
  file_path           String?
  processed_file_path String?
  size                Int
  mimeType            String         @map("mime_type")
  type                String
  status              DocumentStatus @default(PENDING)
  results             Json?
  error               String?
  processing_time     Int?
  createdAt           DateTime       @default(now()) @map("created_at")
  completed_at        DateTime?
  userId              String         @map("user_id")
  extractedText       String?        @map("extracted_text")
  metadata            Json?          @map("metadata")
  processedAt         DateTime?      @map("processed_at") @db.Timestamp(6)
  user                User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([metadata], map: "idx_documents_metadata", type: Gin)
  @@index([processedAt], map: "idx_documents_processed_at")
  @@map("documents")
}

model api_keys {
  id         String   @id
  key        String   @unique
  name       String
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  user_id    String
  users      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum DocumentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}
